# Blue-Green Deployment Nginx Configuration

# Define upstream pools for each environment
upstream bluebullet {
    zone bluebullet 512k;
    random two least_conn;
    
    server 10.244.3.20:80 max_fails=1 fail_timeout=10s max_conns=0;
    server 10.244.4.48:80 max_fails=1 fail_timeout=10s max_conns=0;
}

upstream greenbullet {
    zone greenbullet 512k;
    random two least_conn;
    
    server 10.244.3.21:80 max_fails=1 fail_timeout=10s max_conns=0;
    server 10.244.4.47:80 max_fails=1 fail_timeout=10s max_conns=0;
}

upstream redbullet {
    zone redbullet 512k;
    random two least_conn;
    
    server 10.244.3.22:80 max_fails=1 fail_timeout=10s max_conns=0;
    server 10.244.4.49:80 max_fails=1 fail_timeout=10s max_conns=0;
}

# Map User header to determine routing
map $http_user $backend_selection {
    "bluegroup"  "blue";
    "greengroup" "green";
    default      "red";
}

# Server block
server {
    listen 80;
    listen [::]:80;
    
    # SSL configuration
    listen 443 ssl;
    listen [::]:443 ssl;
    
    server_name bluegreen.example.com;
    
    # SSL certificate paths - UPDATE THESE PATHS
    ssl_certificate /etc/nginx/ssl/bluegreen.crt;
    ssl_certificate_key /etc/nginx/ssl/bluegreen.key;
    
    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    # If you're behind a load balancer, uncomment these:
    # set_real_ip_from 10.0.0.0/8;  # Adjust to your LB subnet
    # real_ip_header X-Forwarded-For;
    
    # Route all traffic based on User header
    location / {
        # Set variables for routing
        set $chosen_backend "";
        
        if ($backend_selection = "blue") {
            set $chosen_backend "bluebullet";
        }
        if ($backend_selection = "green") {
            set $chosen_backend "greenbullet";
        }
        if ($backend_selection = "red") {
            set $chosen_backend "redbullet";
        }
        
        # Proxy settings
        proxy_pass http://$chosen_backend;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
        
        # Client settings
        client_max_body_size 1m;
        
        # Buffering
        proxy_buffering on;
        
        # HTTP version and connection handling
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Error handling
        proxy_next_upstream error timeout;
    }
    
    # Health check endpoint (optional)
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
}
